#main project script
#R Digits Recognition Neural Networks
#Daniel Freitas and Alex Shkunov
#
#Date: 23.10.2014
#Thesis: Haaga-Helia UAS
#Removes list from main memory
rm(list=ls())
#Import stuff
library(neuralnet)
#Global variables
digits_FileName <- "../train_headers_1to3000.csv"
hidden_layer_size <- 10
tr = 1
#run actual stuff
print("Starting Actual Stuff")
#loading into the main memory
digits_dataset <- read.csv(digits_FileName)
print("Data Loaded...")
#Calculation for 60/20/20
m = dim(digits_dataset)[1]
b1 = m * 0.6
b2 = b1 + m * 0.2
#Separate dataset into 60/20/20
digits_train_set <- digits_dataset[1:b1, ]
digits_validation_set <- digits_dataset[(b1+1):b2, ]
digits_test_set <- digits_dataset[(b2+1):m, ]
#Trainining model
print("Training...")
f <- as.formula(paste("label ~", paste(colnames(digits_train_set)[-1], collapse = " + ")))
model = neuralnet(f, data=digits_train_set, hidden=hidden_layer_size, threshold = tr)
prediction(model)
prediction(model, digits_test_set)
print(model)
fit <- compute(model, digits_train_set)
acc <- compute(model, digits_test_set)
fit <- compute(model, digits_train_set[-1])
acc <- compute(model, digits_test_set[-1])
fit <- compute(model, digits_train_set[-1])$net.result
acc <- compute(model, digits_test_set[-1])$net.result
fit
#main project script
#R Digits Recognition Neural Networks
#Daniel Freitas and Alex Shkunov
#
#Date: 23.10.2014
#Thesis: Haaga-Helia UAS
#Removes list from main memory
rm(list=ls())
#Import stuff
library(neuralnet)
#Global variables
digits_FileName <- "../trainLoadTry_headers.csv"
hidden_layer_size <- 10
tr = 1
#run actual stuff
print("Starting Actual Stuff")
#loading into the main memory
digits_dataset <- read.csv(digits_FileName)
print("Data Loaded...")
#Calculation for 60/20/20
m = dim(digits_dataset)[1]
b1 = m * 0.6
b2 = b1 + m * 0.2
#Separate dataset into 60/20/20
digits_train_set <- digits_dataset[1:b1, ]
digits_validation_set <- digits_dataset[(b1+1):b2, ]
digits_test_set <- digits_dataset[(b2+1):m, ]
#Trainining model
print("Training...")
f <- as.formula(paste("label ~", paste(colnames(digits_train_set)[-1], collapse = " + ")))
model = neuralnet(f, data=digits_train_set, hidden=hidden_layer_size, threshold = tr)
#Training fit and test accuracy
fit <- compute(model, digits_train_set[-1])$net.result
acc <- compute(model, digits_test_set[-1])$net.result
fit
acc
#main project script
#R Digits Recognition Neural Networks
#Daniel Freitas and Alex Shkunov
#
#Date: 23.10.2014
#Thesis: Haaga-Helia UAS
#Removes list from main memory
rm(list=ls())
#Import stuff
library(neuralnet)
#Global variables
digits_FileName <- "../trainLoadTry_headers.csv"
hidden_layer_size <- 1
tr = 1
#run actual stuff
print("Starting Actual Stuff")
#loading into the main memory
digits_dataset <- read.csv(digits_FileName)
print("Data Loaded...")
#Calculation for 60/20/20
m = dim(digits_dataset)[1]
b1 = m * 0.6
b2 = b1 + m * 0.2
#Separate dataset into 60/20/20
digits_train_set <- digits_dataset[1:b1, ]
digits_validation_set <- digits_dataset[(b1+1):b2, ]
digits_test_set <- digits_dataset[(b2+1):m, ]
#Trainining model
print("Training...")
f <- as.formula(paste("label ~", paste(colnames(digits_train_set)[-1], collapse = " + ")))
model = neuralnet(f, data=digits_train_set, hidden=hidden_layer_size, threshold = tr)
#Training fit and test accuracy
fit <- compute(model, digits_train_set[-1])$net.result
acc <- compute(model, digits_test_set[-1])$net.result
fit
acc
#main project script
#R Digits Recognition Neural Networks
#Daniel Freitas and Alex Shkunov
#
#Date: 23.10.2014
#Thesis: Haaga-Helia UAS
#Removes list from main memory
rm(list=ls())
#Import stuff
library(neuralnet)
#Global variables
digits_FileName <- "../trainLoadTry_headers.csv"
hidden_layer_size <- 10
tr = 0.1
#run actual stuff
print("Starting Actual Stuff")
#loading into the main memory
digits_dataset <- read.csv(digits_FileName)
print("Data Loaded...")
#Calculation for 60/20/20
m = dim(digits_dataset)[1]
b1 = m * 0.6
b2 = b1 + m * 0.2
#Separate dataset into 60/20/20
digits_train_set <- digits_dataset[1:b1, ]
digits_validation_set <- digits_dataset[(b1+1):b2, ]
digits_test_set <- digits_dataset[(b2+1):m, ]
#Trainining model
print("Training...")
f <- as.formula(paste("label ~", paste(colnames(digits_train_set)[-1], collapse = " + ")))
model = neuralnet(f, data=digits_train_set, hidden=hidden_layer_size, threshold = tr)
#Training fit and test accuracy
fit <- compute(model, digits_train_set[-1])$net.result
acc <- compute(model, digits_test_set[-1])$net.result
fit
acc
